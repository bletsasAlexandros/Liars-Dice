[{"/Users/alex/Documents/Projects/Liars-Dice/client/src/index.tsx":"1","/Users/alex/Documents/Projects/Liars-Dice/client/src/reportWebVitals.ts":"2","/Users/alex/Documents/Projects/Liars-Dice/client/src/App.tsx":"3","/Users/alex/Documents/Projects/Liars-Dice/client/src/chat.tsx":"4","/Users/alex/Documents/Projects/Liars-Dice/client/src/board.tsx":"5","/Users/alex/Documents/Projects/Liars-Dice/client/src/choice.tsx":"6"},{"size":500,"mtime":1608758791164,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1608758791165,"results":"9","hashOfConfig":"8"},{"size":1127,"mtime":1608926311533,"results":"10","hashOfConfig":"8"},{"size":1563,"mtime":1608921361122,"results":"11","hashOfConfig":"8"},{"size":1079,"mtime":1608979261862,"results":"12","hashOfConfig":"8"},{"size":1329,"mtime":1608998525596,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1442i3t",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alex/Documents/Projects/Liars-Dice/client/src/index.tsx",[],["29","30"],"/Users/alex/Documents/Projects/Liars-Dice/client/src/reportWebVitals.ts",[],"/Users/alex/Documents/Projects/Liars-Dice/client/src/App.tsx",["31","32","33"],"import './App.css';\nimport {Chat} from './chat'\nimport {Board} from './board';\nimport React, {useState, useRef, useEffect, FunctionComponent} from 'react';\nimport io from \"socket.io-client\";\n\nexport const socket = io(\"http://localhost:4000\");\n\nfunction App() {\n  const [room,setRoom] = useState('Room');\n  const [avatar, setAvatar] = useState('Alex');\n  const [players, setPlayers] = useState<Array<String>>([]);\n\n  const joinRoom = () =>{\n    socket.emit('join-room',{roomName:room, user:avatar});\n    setRoom(\"\")\n  }\n\n  useEffect(()=>{\n    socket.on('join-room',(userInRoom:Array<String>)=>{\n      console.log(userInRoom);\n      setPlayers(userInRoom);\n    })\n  },[])\n\n  return (\n    <div className=\"App\">\n      <a>Select a Username</a>\n      <input type=\"text\" placeholder=\"Username\" value={avatar} onChange={e=>setAvatar(e.target.value)}></input>\n      <input type=\"text\" placeholder=\"Room\" value={room} onChange={e=>setRoom(e.target.value)}></input>\n      <button onClick={joinRoom}>Join Room</button>\n      <Chat avatarUser={avatar}/>\n      <Board users={players} avatar={avatar}/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/alex/Documents/Projects/Liars-Dice/client/src/chat.tsx",["34","35","36"],"import React, {useState, useRef, useEffect, FunctionComponent} from 'react';\r\nimport {socket} from './App';\r\nimport './chat.css';\r\n\r\ninterface ChatProps {\r\n    avatarUser: string ;\r\n}\r\n\r\n\r\nexport const Chat: React.FC<ChatProps> = (props:ChatProps) =>{\r\n    interface MyMessage {\r\n        avatar: string,\r\n        message:string\r\n    }\r\n\r\n    const [messages,setMessages] = useState<Array<MyMessage>>([]);\r\n    const [message,setMessage] = useState('');\r\n    const avatar = props.avatarUser;\r\n\r\n    const sendMessage = () =>{\r\n      socket.emit('chat',{avatar:avatar,message:message});\r\n      setMessage(\"\");\r\n      setMessages(prevState=>[...prevState,\r\n        {\r\n            avatar: avatar,\r\n            message: message\r\n        }])\r\n    }\r\n   \r\n    useEffect(()=>{\r\n        socket.on('chat',(data:MyMessage)=>{\r\n            setMessages(prevState=>[...prevState,\r\n            {\r\n                avatar: data.avatar,\r\n                message: data.message\r\n            }])\r\n        })\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"main-chat\">\r\n            <h6>Chat:</h6>\r\n            <input type=\"text\" placeholder=\"Write Something\" value={message} onChange={e=>setMessage(e.target.value)}></input>\r\n            <button onClick={sendMessage}>Send</button>\r\n            {messages.map((messageUp,index)=>{\r\n                return(\r\n                <div key={`Key_${index}`}>\r\n                    <a>{messageUp.avatar}: {messageUp.message}</a>\r\n                    <br />\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","/Users/alex/Documents/Projects/Liars-Dice/client/src/board.tsx",["37","38","39","40","41"],"/Users/alex/Documents/Projects/Liars-Dice/client/src/choice.tsx",["42","43","44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":26,"nodeType":"52","messageId":"53","endLine":4,"endColumn":32},{"ruleId":"50","severity":1,"message":"54","line":4,"column":45,"nodeType":"52","messageId":"53","endLine":4,"endColumn":62},{"ruleId":"55","severity":1,"message":"56","line":28,"column":7,"nodeType":"57","endLine":28,"endColumn":10},{"ruleId":"50","severity":1,"message":"51","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":32},{"ruleId":"50","severity":1,"message":"54","line":1,"column":45,"nodeType":"52","messageId":"53","endLine":1,"endColumn":62},{"ruleId":"55","severity":1,"message":"56","line":48,"column":21,"nodeType":"57","endLine":48,"endColumn":24},{"ruleId":"50","severity":1,"message":"51","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":32},{"ruleId":"50","severity":1,"message":"54","line":1,"column":45,"nodeType":"52","messageId":"53","endLine":1,"endColumn":62},{"ruleId":"55","severity":1,"message":"56","line":30,"column":21,"nodeType":"57","endLine":30,"endColumn":24},{"ruleId":"58","severity":1,"message":"59","line":32,"column":45,"nodeType":"60","messageId":"61","endLine":32,"endColumn":47},{"ruleId":"58","severity":1,"message":"59","line":32,"column":130,"nodeType":"60","messageId":"61","endLine":32,"endColumn":132},{"ruleId":"50","severity":1,"message":"51","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":32},{"ruleId":"50","severity":1,"message":"54","line":1,"column":45,"nodeType":"52","messageId":"53","endLine":1,"endColumn":62},{"ruleId":"58","severity":1,"message":"59","line":20,"column":27,"nodeType":"60","messageId":"61","endLine":20,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":24,"column":7,"nodeType":"64","endLine":24,"endColumn":9,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'FunctionComponent' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.user'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [props.user]",{"range":"71","text":"72"},[645,647],"[props.user]"]