[{"/Users/alex/Documents/Projects/Liars-Dice/client/src/index.tsx":"1","/Users/alex/Documents/Projects/Liars-Dice/client/src/reportWebVitals.ts":"2","/Users/alex/Documents/Projects/Liars-Dice/client/src/App.tsx":"3","/Users/alex/Documents/Projects/Liars-Dice/client/src/chat.tsx":"4","/Users/alex/Documents/Projects/Liars-Dice/client/src/board.tsx":"5","/Users/alex/Documents/Projects/Liars-Dice/client/src/choice.tsx":"6"},{"size":500,"mtime":1608758791164,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1608758791165,"results":"9","hashOfConfig":"8"},{"size":1100,"mtime":1609072954049,"results":"10","hashOfConfig":"8"},{"size":1563,"mtime":1608921361122,"results":"11","hashOfConfig":"8"},{"size":1713,"mtime":1609072934999,"results":"12","hashOfConfig":"8"},{"size":1099,"mtime":1609072946079,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1442i3t",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alex/Documents/Projects/Liars-Dice/client/src/index.tsx",[],["28","29"],"/Users/alex/Documents/Projects/Liars-Dice/client/src/reportWebVitals.ts",[],"/Users/alex/Documents/Projects/Liars-Dice/client/src/App.tsx",["30"],"/Users/alex/Documents/Projects/Liars-Dice/client/src/chat.tsx",["31","32","33"],"import React, {useState, useRef, useEffect, FunctionComponent} from 'react';\r\nimport {socket} from './App';\r\nimport './chat.css';\r\n\r\ninterface ChatProps {\r\n    avatarUser: string ;\r\n}\r\n\r\n\r\nexport const Chat: React.FC<ChatProps> = (props:ChatProps) =>{\r\n    interface MyMessage {\r\n        avatar: string,\r\n        message:string\r\n    }\r\n\r\n    const [messages,setMessages] = useState<Array<MyMessage>>([]);\r\n    const [message,setMessage] = useState('');\r\n    const avatar = props.avatarUser;\r\n\r\n    const sendMessage = () =>{\r\n      socket.emit('chat',{avatar:avatar,message:message});\r\n      setMessage(\"\");\r\n      setMessages(prevState=>[...prevState,\r\n        {\r\n            avatar: avatar,\r\n            message: message\r\n        }])\r\n    }\r\n   \r\n    useEffect(()=>{\r\n        socket.on('chat',(data:MyMessage)=>{\r\n            setMessages(prevState=>[...prevState,\r\n            {\r\n                avatar: data.avatar,\r\n                message: data.message\r\n            }])\r\n        })\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"main-chat\">\r\n            <h6>Chat:</h6>\r\n            <input type=\"text\" placeholder=\"Write Something\" value={message} onChange={e=>setMessage(e.target.value)}></input>\r\n            <button onClick={sendMessage}>Send</button>\r\n            {messages.map((messageUp,index)=>{\r\n                return(\r\n                <div key={`Key_${index}`}>\r\n                    <a>{messageUp.avatar}: {messageUp.message}</a>\r\n                    <br />\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","/Users/alex/Documents/Projects/Liars-Dice/client/src/board.tsx",["34","35","36","37","38","39","40"],"/Users/alex/Documents/Projects/Liars-Dice/client/src/choice.tsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":28,"column":7,"nodeType":"47","endLine":28,"endColumn":10},{"ruleId":"48","severity":1,"message":"49","line":1,"column":26,"nodeType":"50","messageId":"51","endLine":1,"endColumn":32},{"ruleId":"48","severity":1,"message":"52","line":1,"column":45,"nodeType":"50","messageId":"51","endLine":1,"endColumn":62},{"ruleId":"45","severity":1,"message":"46","line":48,"column":21,"nodeType":"47","endLine":48,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":32,"column":31,"nodeType":"55","messageId":"56","endLine":32,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":37,"column":7,"nodeType":"59","endLine":37,"endColumn":18,"suggestions":"60"},{"ruleId":"45","severity":1,"message":"46","line":44,"column":21,"nodeType":"47","endLine":44,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":46,"column":21,"nodeType":"47","endLine":46,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":47,"column":45,"nodeType":"55","messageId":"56","endLine":47,"endColumn":47},{"ruleId":"53","severity":1,"message":"54","line":49,"column":44,"nodeType":"55","messageId":"56","endLine":49,"endColumn":46},{"ruleId":"53","severity":1,"message":"54","line":49,"column":84,"nodeType":"55","messageId":"56","endLine":49,"endColumn":86},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'FunctionComponent' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.avatar.length'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [indexTurn, props.avatar.length]",{"range":"66","text":"67"},[1035,1046],"[indexTurn, props.avatar.length]"]